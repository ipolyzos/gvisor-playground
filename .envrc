#set -e
#set -u 
#set -x

MINIKUBE_INCLUDED=false

MINIKUBE_VERSION=v1.0.0

# If bin folder does not exist create it
if [ ! -d ${PWD}/bin ]; then
  mkdir -p ${PWD}/bin;
fi

# download the latest runsc binaries
function download_runsc {
	if [ ! -f ${PWD}/bin/runsc ]
		then
		curl -sLo ${PWD}/bin/runsc https://storage.googleapis.com/gvisor/releases/nightly/latest/runsc
		chmod a+x ${PWD}/bin/runsc
	fi
}

function generate_docker_daemon_json {
	 
	 echo "
*** gVisor Playground
-

Please copy paste the folowing snippet on '/etc/docker/daemon.json' and restart docker using 'sudo systemctl restart docker'.
	  
--- SNIPPET START
{
    \"runtimes\": {
        \"runsc\": {
            \"path\": \"${PWD}/bin/runsc\"
        }
    }
}
--- SNIPPET END
"
}

# download minikube if does not exist
function download_minikube {
	if [ ! -f ${PWD}/bin/minikube ]
	then
		curl -sLo ${PWD}/bin/minikube https://storage.googleapis.com/minikube/releases/${MINIKUBE_VERSION}/minikube-linux-amd64
		chmod +x ${PWD}/bin/minikube
	fi
}

case "$OSTYPE" in
  linux*)
  	download_runsc
	
	if ${MINIKUBE_INCLUDED}
	then
    	download_minikube
	fi 
	
	generate_docker_daemon_json
  	;;
  *) 
  	echo "unsupported OS : $OSTYPE" 
  	;;
esac

# set env PATH
export PATH="${PATH}:${PWD}/bin"

